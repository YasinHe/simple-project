apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: 'jacoco.gradle'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.company.pjname"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        //AndroidJunitRunner必须要显示指定在defaultConfig中，使用Gradle依赖管理无法使其生效
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        renderscriptTargetApi rootProject.ext.android["renderscriptTargetApi"]
        renderscriptSupportModeEnabled true    // Enable RS support
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    //使用kotlin实验功能
    androidExtensions {
        experimental = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            // Fix unit test resources not included with AS3
            includeAndroidResources = true
        }
    }

    compileOptions {
        encoding "utf-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "code"
    productFlavors {
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES'
    }

    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.0'
    //base
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["cardview-v7"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    //ui
    implementation rootProject.ext.dependencies["circleimageview"]
    implementation rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
    implementation rootProject.ext.dependencies["glide"]
    implementation rootProject.ext.dependencies["material_dialogs"]
    implementation rootProject.ext.dependencies["autosize"]
    implementation rootProject.ext.dependencies["systembartint"]
    implementation rootProject.ext.dependencies["DToast"]
    implementation rootProject.ext.dependencies["BasePopup"]
    implementation rootProject.ext.dependencies["BasePopup-compat-lifecycle"]
    //net
    implementation rootProject.ext.dependencies["glide"]
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    annotationProcessor rootProject.ext.dependencies["glide_compiler"]
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["retrofit_gson"]
    implementation rootProject.ext.dependencies["kotlinadapter"]
    implementation rootProject.ext.dependencies["okhttp"]
    implementation rootProject.ext.dependencies["cookie"]
    //utils
    implementation 'com.eightbitlab:rxbus:1.0.2'
    //di
    //    implementation rootProject.ext.dependencies["dagger"]
    //    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    //    implementation rootProject.ext.dependencies["dagger-android"]
    //    implementation rootProject.ext.dependencies["dagger-android-support"]
    //    annotationProcessor rootProject.ext.dependencies["dagger-android-processor"]
    //    implementation rootProject.ext.dependencies["javax_annotation"]
    //multidex
    implementation rootProject.ext.dependencies["multidex"]
    //canary
    debugImplementation(rootProject.ext.dependencies["leakcanary-android"]) {
        exclude group: 'com.android.support'
    }
    releaseImplementation(rootProject.ext.dependencies["leakcanary-android-no-op"]) {
        exclude group: 'com.android.support'

    }
    testImplementation(rootProject.ext.dependencies["leakcanary-android-no-op"]) {
        exclude group: 'com.android.support'
    }
    //UI测试
    androidTestImplementation(rootProject.ext.dependencies["espresso-core"]) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    implementation(rootProject.ext.dependencies["espresso-idling-resource"]) {
        exclude module: 'support-annotations'
    }
    androidTestImplementation rootProject.ext.dependencies["espresso-contrib"]
    androidTestImplementation rootProject.ext.dependencies["espresso-intents"]
    androidTestImplementation rootProject.ext.dependencies["espresso-accessibility"]
    androidTestImplementation rootProject.ext.dependencies["espresso-web"]
    androidTestImplementation rootProject.ext.dependencies["idling-concurrent"]
    //unit test
    testImplementation rootProject.ext.dependencies["junit"]
    testImplementation rootProject.ext.dependencies["mockito"]
    testImplementation rootProject.ext.dependencies["powermock-module-junit4"]
    testImplementation rootProject.ext.dependencies["powermock-module-junit4-rule"]
    testImplementation rootProject.ext.dependencies["powermock-api-mockito2"]
    //注意这里是mockito2
    testImplementation rootProject.ext.dependencies["powermock-classloading-xstream"]
    testImplementation rootProject.ext.dependencies["robolectric"]
    testImplementation rootProject.ext.dependencies["shadows-support-v4"]
    testImplementation rootProject.ext.dependencies["shadows-multidex"]
    //支持Multidex功能
    androidTestImplementation rootProject.ext.dependencies["runner"]
}

//解决支持库版本不兼容问题
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.1.0'
            }
        }
    }
}
repositories {
    mavenCentral()
}
